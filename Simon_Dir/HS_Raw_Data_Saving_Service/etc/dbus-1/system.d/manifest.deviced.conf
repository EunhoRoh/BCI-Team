<!-- This configuration is automatically generated from Manifest by RPM 4.9.1 security plugin -->
<!DOCTYPE busconfig PUBLIC "-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN" "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
<busconfig>
  <policy context="default">
    <deny own="org.tizen.system.vibrator"/>
  </policy>
  <policy smack="deviced">
    <allow own="org.tizen.system.vibrator"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="GetDuration"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="GetDuration"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="CreateEffect"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="CreateEffect"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="GetState"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="GetState"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="VibrateBufferL"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="VibrateBufferL"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="VibrateBuffer"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="VibrateBuffer"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="VibrateMonotone"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="VibrateMonotone"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="StopDevice"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="StopDevice"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="CloseDevice"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="CloseDevice"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="OpenDevice"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="OpenDevice"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="GetCount"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.vibrator" send_interface="org.tizen.system.vibrator.standard" send_member="GetCount"/>
  </policy>
  <policy context="default">
    <deny own="org.tizen.system.deviced"/>
  </policy>
  <policy smack="deviced">
    <allow own="org.tizen.system.deviced"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.resize" send_member="getresize"/>
  </policy>
  <policy smack="deviced::resize">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.resize" send_member="getresize"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.resize" send_member="setresize"/>
  </policy>
  <policy smack="deviced::resize">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.resize" send_member="setresize"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.touch" send_member="SetSensitivity"/>
  </policy>
  <policy smack="deviced::touch">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.touch" send_member="SetSensitivity"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Battery" send_member="ChargerCharging"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Battery" send_member="ChargerCharging"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Battery" send_member="SetLowbatLevel"/>
  </policy>
  <policy smack="deviced::battery">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Battery" send_member="SetLowbatLevel"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="RemoveData"/>
  </policy>
  <policy smack="deviced::csa">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="RemoveData"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="WriteData"/>
  </policy>
  <policy smack="deviced::csa">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="WriteData"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="ReadData"/>
  </policy>
  <policy smack="deviced::csa">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="ReadData"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="ReadCSA"/>
  </policy>
  <policy smack="deviced::csa">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Csa" send_member="ReadCSA"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Testmode" send_member="factory15"/>
  </policy>
  <policy smack="deviced::testmode">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Testmode" send_member="factory15"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Testmode" send_member="Launch"/>
  </policy>
  <policy smack="deviced::testmode">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Testmode" send_member="Launch"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageFormat"/>
  </policy>
  <policy smack="deviced::usbhost">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageFormat"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageUnmount"/>
  </policy>
  <policy smack="deviced::usbhost">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageUnmount"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageMount"/>
  </policy>
  <policy smack="deviced::usbhost">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageMount"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageInfoAll"/>
  </policy>
  <policy smack="deviced::usbhost">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Usbhost" send_member="StorageInfoAll"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="flightmode"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="flightmode"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="Reboot"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="Reboot"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="poweroff"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="poweroff"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="reboot_recovery"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="reboot_recovery"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="reboot"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="reboot"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="pwroff_popup"/>
  </policy>
  <policy smack="deviced::reboot">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="pwroff_popup"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="setresetkeydisable"/>
  </policy>
  <policy smack="deviced::power">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.power" send_member="setresetkeydisable"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="SetIrCommand"/>
  </policy>
  <policy smack="deviced::led">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="SetIrCommand"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="stopcustom"/>
  </policy>
  <policy smack="deviced::led">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="stopcustom"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="playcustom"/>
  </policy>
  <policy smack="deviced::led">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="playcustom"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="SetBrightness"/>
  </policy>
  <policy smack="deviced::led">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="SetBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="GetBrightness"/>
  </policy>
  <policy smack="deviced::led">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="GetBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="GetMaxBrightness"/>
  </policy>
  <policy smack="deviced::led">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.Led" send_member="GetMaxBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="GetDuration"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="GetDuration"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="CreateEffect"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="CreateEffect"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="GetState"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="GetState"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="VibrateBufferL"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="VibrateBufferL"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="VibrateBuffer"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="VibrateBuffer"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="VibrateMonotone"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="VibrateMonotone"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="StopDevice"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="StopDevice"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="CloseDevice"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="CloseDevice"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="OpenDevice"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="OpenDevice"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="GetCount"/>
  </policy>
  <policy smack="deviced::haptic">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.haptic" send_member="GetCount"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="StayTouchScreenOff"/>
  </policy>
  <policy smack="deviced::smartlotation">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="StayTouchScreenOff"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="LCDPanelOffMode"/>
  </policy>
  <policy smack="deviced::smartlotation">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="LCDPanelOffMode"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="ActorControl"/>
  </policy>
  <policy smack="deviced::actor">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="ActorControl"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SaveLog"/>
  </policy>
  <policy smack="deviced::dump">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SaveLog"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="Dumpmode"/>
  </policy>
  <policy smack="deviced::dump">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="Dumpmode"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetHBMTimeout"/>
  </policy>
  <policy smack="deviced::hbm">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetHBMTimeout"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetHBM"/>
  </policy>
  <policy smack="deviced::hbm">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetHBM"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetRefreshRate"/>
  </policy>
  <policy smack="deviced::rate">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetRefreshRate"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="UpdateLCDTimeoutByTouch"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="UpdateLCDTimeoutByTouch"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="PlatformLCDControl"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="PlatformLCDControl"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="CustomLCDOff"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="CustomLCDOff"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="CustomLCDOn"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="CustomLCDOn"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="PowerKeyLCDOff"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="PowerKeyLCDOff"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="setlcdtimeout"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="setlcdtimeout"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="LockScreenBgOn"/>
  </policy>
  <policy smack="deviced::lcd">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="LockScreenBgOn"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="AutoBrightnessChanged"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="AutoBrightnessChanged"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetBrightness"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="SetBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="GetBrightness"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="GetBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="GetMaxBrightness"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="GetMaxBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="GetDisplayCount"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="GetDisplayCount"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="HoldBrightness"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="HoldBrightness"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="changestate"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="changestate"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="unlockstate"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="unlockstate"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="lockstate"/>
  </policy>
  <policy smack="deviced::display">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="lockstate"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="stop"/>
  </policy>
  <policy smack="deviced::onoff">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="stop"/>
  </policy>
  <policy context="default">
    <deny send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="start"/>
  </policy>
  <policy smack="deviced::onoff">
    <allow send_destination="org.tizen.system.deviced" send_interface="org.tizen.system.deviced.display" send_member="start"/>
  </policy>
</busconfig>
